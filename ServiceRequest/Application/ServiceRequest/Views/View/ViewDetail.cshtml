@model ServiceRequest.Models.ServiceRequestModel
@{
    ViewBag.Title = "ViewForm";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}


<script>

        var states = new Array();

        states['email creation'] = new Array('Mailing list', 'Admin email', 'Individual email');
        states['software installation'] = new Array('Window Installation', 'Driver Installation', 'Graphic software Installation','Photoshop');
        states['hardware support'] = new Array('Upgrade RAM', 'Fan heating', 'Ups not working');
        states['others'] = new Array('others');


        function setStates() {
            cntrySel = document.getElementById('state');
            stateList = states[cntrySel.value];
            changeSelect('city', stateList, stateList);
        }

        function changeSelect(fieldID, newOptions, newValues) {
            selectField = document.getElementById(fieldID);
            selectField.options.length = 0;
            for (i = 0; i < newOptions.length; i++) {
                selectField.options[selectField.length] = new Option(newOptions[i], newValues[i]);
            }
        }

</script>




@if ((string)Session["role"] == "user")
{
    <h2>Service Request Form</h2>

    using (Html.BeginForm("AddRequest", "ServiceRequest", FormMethod.Post))
    {


        //for title
        <div class="form-group">
            @Html.LabelFor(model => model.title, new { @class = "col-sm-2 " })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.title, new { @class = "form-control" })
                <br>
            </div>
        </div>

        //for category list
        <div class="form-group">

            @Html.LabelFor(model => model.category, new { @class = "col-sm-2 " })


            <div class="col-sm-10">
                @{
                    List<SelectListItem> categorylistItems = new List<SelectListItem>();
                    categorylistItems.Add(new SelectListItem
                    {
                        Text = "Email Creation",
                        Value = "email creation"

                    });
                    categorylistItems.Add(new SelectListItem
                    {
                        Text = "Software Installation",
                        Value = "software installation"

                    });
                    categorylistItems.Add(new SelectListItem
                    {
                        Text = "Hardware Support",
                        Value = "hardware support"
                    });
                    categorylistItems.Add(new SelectListItem
                    {
                        Text = "Others",
                        Value = "others"
                    });

                }

                @Html.DropDownListFor(model => model.category, categorylistItems, "-- Select Category --", new { @onchange = "setStates()", @id = "state", @class = "form-control", @selected = "-- Select Category --" })
                <br>
            </div>
        </div>



                    //for subcategory list

                    <div class="form-group">
                        @Html.LabelFor(model => model.subCategory, new { @class = "col-sm-2 " })

                        @{
                            List<SelectListItem> subCategorylistItems = new List<SelectListItem>();
                            subCategorylistItems.Add(new SelectListItem
                            {
                                Text = "Window Installation",
                                Value = "window installation"
                            });
                            subCategorylistItems.Add(new SelectListItem
                            {
                                Text = "Driver Installation",
                                Value = "driver installation",

                            });
                            subCategorylistItems.Add(new SelectListItem
                            {
                                Text = "Graphic software Installation",
                                Value = "graphic software installation"
                            });
                            subCategorylistItems.Add(new SelectListItem
                            {
                                Text = "Photoshop",
                                Value = "photoshop"
                            });
                            subCategorylistItems.Add(new SelectListItem
                            {
                                Text = "Admin Email",
                                Value = "admin email"
                            });
                            subCategorylistItems.Add(new SelectListItem
                            {
                                Text = "Upgrade RAM",
                                Value = "upgrade ram"
                            });
                            subCategorylistItems.Add(new SelectListItem
                            {
                                Text = "Individual email",
                                Value = "Individual email"
                            });
                            subCategorylistItems.Add(new SelectListItem
                            {
                                Text = "Mailing list",
                                Value = "Mailing list"
                            });
                            subCategorylistItems.Add(new SelectListItem
                            {
                                Text = "Fan heating",
                                Value = "Fan heating"
                            });
                            subCategorylistItems.Add(new SelectListItem
                            {
                                Text = "Ups not working",
                                Value = "Ups not working"
                            });
                            subCategorylistItems.Add(new SelectListItem
                            {
                                Text = "others",
                                Value = "others"
                            });


                        }
                        <div class="col-sm-10">
                            @Html.DropDownListFor(model => model.subCategory, subCategorylistItems, "-- Select Sub-Category --", new { @class = "form-control", @selected = "-- Select Sub-Category --", @id = "city" })
                            <br>
                        </div>
                    </div>


                            //for priority list
                            <div class="form-group">
                                @Html.LabelFor(model => model.priority, new { @class = "col-sm-2 " })


                                @{
                                    List<SelectListItem> prioritylistItems = new List<SelectListItem>();
                                    prioritylistItems.Add(new SelectListItem
                                    {
                                        Text = "Low",
                                        Value = "low"
                                    });
                                    prioritylistItems.Add(new SelectListItem
                                    {
                                        Text = "Medium",
                                        Value = "medium",

                                    });
                                    prioritylistItems.Add(new SelectListItem
                                    {
                                        Text = "High",
                                        Value = "high"
                                    });

                                }
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(model => model.priority, prioritylistItems, "-- Select Priority --", new { @class = "form-control", @selected = "-- Select Priority --"})
                                    <br>
                                </div>
                            </div>

                                    //for description
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.description, new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-10">
                                            @Html.TextAreaFor(model => model.description, 4, 63, new { @class = "form-control" })
                                            <br>
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        <div class="col-sm-2">
                                            @TempData["message"]
                                        </div>

                                        <div class="col-sm-10">
                                            <button type="submit" class="btn pull-left" value="Submit Request" id="submit" style="background-color:#3C8DBC;color:#FFFFF0"><b>Submit</b></button>

                                        </div>
                                    </div>




                                        }
                                        //if end
                                    }
                                    else
                                    {

                                        //admin can see any request view detail
                                        <h2>View Request Detail</h2>

                                        using(Html.BeginForm("Resolve", "ServiceRequest", FormMethod.Post))
                                        {
                                        //for idsr
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.idsr, new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">

                                                @Html.TextBoxFor(model => model.idsr, new { @class = "form-control", @readonly = "readonly" })
                                                <br>
                                            </div>
                                        </div>

                                        //for title
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.title, new { @class = "col-sm-2 " })
                                            <div class="col-sm-10">
                                                @Html.TextBoxFor(model => model.title, new { @class = "form-control", @readonly = "readonly" })
                                                <br>
                                            </div>
                                        </div>

                                        //for category list
                                        <div class="form-group">

                                            @Html.LabelFor(model => model.category, new { @class = "col-sm-2 " })


                                            <div class="col-sm-10">
                                                @{
                                                    List<SelectListItem> categorylistItems = new List<SelectListItem>();
                                                    categorylistItems.Add(new SelectListItem
                                                    {
                                                        Text = "Email Creation",
                                                        Value = "email creation"

                                                    });
                                                    categorylistItems.Add(new SelectListItem
                                                    {
                                                        Text = "Software Installation",
                                                        Value = "software installation"

                                                    });
                                                    categorylistItems.Add(new SelectListItem
                                                    {
                                                        Text = "Hardware Support",
                                                        Value = "hardware support"
                                                    });
                                                    categorylistItems.Add(new SelectListItem
                                                    {
                                                        Text = "Others",
                                                        Value = "others"
                                                    });

                                                }

                                                @Html.DropDownListFor(model => model.category, categorylistItems, "-- Select Category --", new { @onchange = "setStates()", @class = "form-control", @selected = "-- Select Category --", @readonly = "readonly" })
                                                <br>
                                            </div>
                                        </div>



                                        //for subcategory list

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.subCategory, new { @class = "col-sm-2 " })

                                            @{
                                                List<SelectListItem> subCategorylistItems = new List<SelectListItem>();
                                                subCategorylistItems.Add(new SelectListItem
                                                {
                                                    Text = "Window Installation",
                                                    Value = "window installation"
                                                });
                                                subCategorylistItems.Add(new SelectListItem
                                                {
                                                    Text = "Driver Installation",
                                                    Value = "driver installation",

                                                });
                                                subCategorylistItems.Add(new SelectListItem
                                                {
                                                    Text = "Graphic software Installation",
                                                    Value = "graphic software installation"
                                                });
                                                subCategorylistItems.Add(new SelectListItem
                                                {
                                                    Text = "Photoshop",
                                                    Value = "photoshop"
                                                });
                                                subCategorylistItems.Add(new SelectListItem
                                                {
                                                    Text = "Admin Email",
                                                    Value = "admin email"
                                                });
                                                subCategorylistItems.Add(new SelectListItem
                                                {
                                                    Text = "Upgrade RAM",
                                                    Value = "upgrade ram"
                                                });


                                            }
                                            <div class="col-sm-10">
                                                @Html.DropDownListFor(model => model.subCategory, subCategorylistItems, "-- Select Sub-Category --", new { @class = "form-control", @selected = "-- Select Sub-Category --", @readonly = "readonly"  })
                                                <br>
                                            </div>
                                        </div>


                                        //for priority list
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.priority, new { @class = "col-sm-2 " })


                                            @{
                                                List<SelectListItem> prioritylistItems = new List<SelectListItem>();
                                                prioritylistItems.Add(new SelectListItem
                                                {
                                                    Text = "Low",
                                                    Value = "low"
                                                });
                                                prioritylistItems.Add(new SelectListItem
                                                {
                                                    Text = "Medium",
                                                    Value = "medium",

                                                });
                                                prioritylistItems.Add(new SelectListItem
                                                {
                                                    Text = "High",
                                                    Value = "high"
                                                });

                                            }
                                            <div class="col-sm-10">
                                                @Html.DropDownListFor(model => model.priority, prioritylistItems, "-- Select Priority --", new { @class = "form-control", @selected = "-- Select Priority --", @readonly = "readonly" })
                                                <br>
                                            </div>
                                        </div>

                                        //for description
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.description, new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.TextAreaFor(model => model.description, 4, 63, new { @title = "Description", @class = "form-control", @readonly = "readonly" })
                                                <br>
                                            </div>
                                        </div>
                                        //for status
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.status, new { @class = "col-sm-2 control-label" })
                                            <div class="col-sm-10">
                                                @Html.TextBoxFor(model => model.status, new { @class = "form-control", @readonly = "readonly" })
                                                <br>
                                            </div>
                                        </div>


                                       
                                        <div class="form-group">
                                            <div class="col-sm-2">
                                                @TempData["message"]
                                            </div>

                                            <div class="col-sm-10">
                                                <button type="submit" class="btn btn-info pull-right" value="Resolved" id="resolve" style="background-color:#3C8DBC;color:#FFFFF0">Resolved</button>

                                            </div>
                                        </div>

                                        <br>
                                        @*<div class="row">
                                                <div class="form-group">
                                                    <div class="col-sm-12 col-lg-12">
                                                        <h3 id="msg"></h3>
                                                    </div>
                                                </div>
                                            </div>*@


                                        }
                                        }
